/* eslint-disable */
!(function (e) { const t = {}; function n(r) { if (t[r]) return t[r].exports; const i = t[r] = { i: r, l: !1, exports: {} }; return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports; }n.m = e, n.c = t, n.d = function (e, t, r) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }); }, n.r = function (e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }); }, n.t = function (e, t) { if (1 & t && (e = n(e)), 8 & t) return e; if (4 & t && typeof e === 'object' && e && e.__esModule) return e; const r = Object.create(null); if (n.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: e }), 2 & t && typeof e !== 'string') for (const i in e)n.d(r, i, ((t) => e[t]).bind(null, i)); return r; }, n.n = function (e) { const t = e && e.__esModule ? function () { return e.default; } : function () { return e; }; return n.d(t, 'a', t), t; }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }, n.p = '', n(n.s = 0); }([function (e, t) { const n = document.getElementById('city-input'); const r = document.getElementById('search-btn'); const i = document.getElementById('city'); const o = document.getElementById('description'); const a = document.getElementById('temp'); const u = document.getElementById('humidity'); const c = document.getElementById('change-temp'); const d = document.getElementById('weather-data'); let l = 0; const m = (e) => { e.cod === '200' ? (i.innerHTML = e.city.name, o.innerHTML = e.list[0].weather[0].description, l = e.list[0].main.temp, a.innerHTML = `Temperature: ${e.list[0].main.temp} Celsius`, u.innerHTML = `Humidity: ${e.list[0].main.humidity}%`, c.innerHTML = 'Change temperature to Fahrenheit', d.classList = '') : alert('City not found'); }; r.addEventListener('click', () => { (async (e) => { const t = await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=524901&APPID=52119e88a31d7d889fe0c2dc770ee44b&units=metric&q=${e}`); const n = await t.json(); await m(n); })(n.value); }), c.addEventListener('click', () => { c.innerHTML.includes('Fahrenheit') ? (l = 1.8 * l + 32, a.innerHTML = `Temperature: ${l.toFixed(2)} Fahrenheit`, c.innerHTML = 'Change temperature to Celsius') : (l = 5 / 9 * (l - 32), a.innerHTML = `Temperature: ${l.toFixed(2)} Celsius`, c.innerHTML = 'Change temperature to Fahrenheit'); }); }]));